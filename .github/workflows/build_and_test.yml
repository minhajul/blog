name: Build And Test

on:
  push:
    branches: [ main ]
  pull_request:

permissions:
  contents: write

jobs:
  php-tests:
    runs-on: ubuntu-latest

    strategy:
      fail-fast: true
      matrix:
        php: [8.4]

    name: PHP ${{ matrix.php }}

    services:
      mysql:
        image: mysql:8
        env:
          MYSQL_DATABASE: laravel
          MYSQL_ALLOW_EMPTY_PASSWORD: yes
        ports:
          - 3306:3306

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          ref: ${{ github.head_ref }}

      - name: Setup PHP
        uses: ./.github/actions/setup
        with:
          php-version: ${{ matrix.php }}

      - name: Cache Dependencies
        uses: actions/cache@v4
        with:
          path: ~/.composer/cache/files
          key: dependencies-composer-${{ hashFiles('composer.json') }}

      - name: Copy .env
        run: cp .env.example .env

      - name: Install Dependencies
        run: composer install --no-interaction --no-progress --prefer-dist --optimize-autoloader

      - name: Generate key
        run: php artisan key:generate

      - name: Run Pint(Laravel Code style)
        run: vendor/bin/pint --parallel

      - name: Commit Code Style Changes
        if: matrix.php == '8.4'
        run: |
          git config user.name "github-actions"
          git config user.email "actions@robot.com"
          git add .
          git commit -m "Code style fixed automatically by Laravel Pint" || exit 0
          git push

      - name: Directory Permissions
        run: chmod -R 777 storage bootstrap/cache

      - name: Migrate and Seed
        run: php artisan migrate:fresh --force --seed
        env:
          DB_PORT: ${{ job.services.mysql.ports[3306] }}
          DB_CONNECTION: mysql
          DB_DATABASE: laravel
          DB_USERNAME: root
          DB_PASSWORD: password

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 24

      - name: Install NPM dependencies
        run: npm install

      - name: Build assets
        run: npm run build

      - name: Execute tests (Unit and Feature tests) via PHPUnit
        run: php artisan test --parallel
